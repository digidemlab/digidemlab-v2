// Variables
//
// Copy settings from this file into the provided `_custom.scss` to override
// the Bootstrap defaults without modifying key, versioned files.


// Table of Contents
//
// Colors
// Options
// Spacing
// Body
// Links
// Grid breakpoints
// Grid containers
// Grid columns
// Fonts
// Components
// Tables
// Buttons
// Forms
// Dropdowns
// Z-index master list
// Navbar
// Navs
// Pagination
// Jumbotron
// Form states and alerts
// Cards
// Tooltips
// Popovers
// Badges
// Modals
// Alerts
// Progress bars
// List group
// Image thumbnails
// Figures
// Breadcrumbs
// Carousel
// Close
// Code

@mixin _assert-ascending($map, $map-name) {
  $prev-key: null;
  $prev-num: null;
  @each $key, $num in $map {
    @if $prev-num == null {
      // Do nothing
    } @else if not comparable($prev-num, $num) {
      @warn "Potentially invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} whose unit makes it incomparable to #{$prev-num}, the value of the previous key '#{$prev-key}' !";
    } @else if $prev-num >= $num {
      @warn "Invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} which isn't greater than #{$prev-num}, the value of the previous key '#{$prev-key}' !";
    }
    $prev-key: $key;
    $prev-num: $num;
  }
}

// Replace `$search` with `$replace` in `$string`
// @author Hugo Giraudel
// @param {String} $string - Initial string
// @param {String} $search - Substring to replace
// @param {String} $replace ('') - New value
// @return {String} - Updated string
@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

@mixin _assert-starts-at-zero($map) {
  $values: map-values($map);
  $first-value: nth($values, 1);
  @if $first-value != 0 {
    @warn "First breakpoint in `$grid-breakpoints` must start at 0, but starts at #{$first-value}.";
  }
}


// General variable structure
//
// Variable format should follow the `$component-modifier-state-property` order.


// Colors
//
// Grayscale and brand colors for use across Bootstrap.

// Start with assigning color names to specific hex values.
$white:                     #fff !default;
$black:                     #000 !default;
$teal:                      #00ffcc;
// $strong-blue:            #3300ff;
$violet:                    #9a24f4;
$magenta:                   #ff21f5;
$yellow:                    #ffff00;
// $primary-blue:           #0000ff;
$blue:                      #0425f3;

// Create grayscale
$gray-dark:                 #1f2021 !default;
$gray:                      #f7f7f7 !default;

// Reassign color vars to semantic color scheme
$brand-primary:             $blue !default;
$brand-success:             $teal !default;
$brand-info:                $violet !default;
$brand-warning:             $yellow !default;
$brand-danger:              $magenta !default;
$brand-inverse:             $black !default;

// Options

// $enable-flex:               true;
$enable-rounded:            false;
$enable-shadows:            true;
// $enable-gradients:          false;
// $enable-transitions:        true;


// Spacing
//
// Control the default styling of most Bootstrap elements by modifying these
// variables. Mostly focused on spacing.
// You can add more entries to the $spacers map, should you need more variation.

$spacer:   1rem !default;
$spacer-x: $spacer !default;
$spacer-y: $spacer !default;
$spacers: (
  0: (
    x: 0,
    y: 0
  ),
  1: (
    x: ($spacer-x * 1),
    y: ($spacer-y * 1)
  ),
  2: (
    x: ($spacer-x * 2),
    y: ($spacer-y * 3)
  ),
  3: (
    x: ($spacer-x * 3),
    y: ($spacer-y * 6)
  ),
  4: (
    x: ($spacer-x * 4),
    y: ($spacer-y * 7)
  ),
  5: (
    x: ($spacer-x * 5),
    y: ($spacer-y * 8)
  )
) !default;
$border-width: 8px !default;


// Grid breakpoints
//
// Define the minimum dimensions at which your layout will change,
// adapting to different screen sizes, for use in media queries.

$grid-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px
) !default;
@include _assert-ascending($grid-breakpoints, "$grid-breakpoints");
@include _assert-starts-at-zero($grid-breakpoints);


// Grid containers
//
// Define the maximum width of `.container` for different screen sizes.

$container-max-widths: (
  sm: 540px,
  md: 720px,
  lg: 960px,
  xl: 1300px
) !default;
@include _assert-ascending($container-max-widths, "$container-max-widths");

// Grid columns
//
// Set the number of columns and specify the width of the gutters.

$grid-gutter-width-base:     25px !default;


// Links
//
// Style anchor elements.

$link-color:            inherit !default;
$link-decoration:       none !default;
$link-hover-color:      $blue !default;
$link-hover-decoration: underline !default;

// Fonts
//
// Font, line-height, and color for body text, headings, and more.

$font-size-base: 1.5rem !default;
$line-height-base: 1.42 !default;

$font-family-sans-serif:    'Noto Sans', sans-serif !default;

$headings-font-family:      'BentonSans', !default;
$headings-font-weight:      normal !default;
$headings-color:            $blue !default;
$headings-line-height:      1.39 !default;
$headings-margin-bottom:    ($spacer * 2) !default;



$font-size-h1: 5.625rem !default;
$font-size-h2: 1.875rem !default;

$display1-size: 5.625rem !default;
$display2-size: 5.625rem !default;

$display1-weight:     $headings-font-weight !default;
$display2-weight:     $headings-font-weight !default;
$display3-weight:     $headings-font-weight !default;
$display4-weight:     $headings-font-weight !default;

$display-line-height: calc;


$lead-font-size:   1.875rem !default;
$lead-font-weight: $headings-font-weight !default;

$text-muted: $black !default;
$small-font-size: 1rem !default;


// Cards

$card-spacer-x:            3.5rem !default;
$card-spacer-y:            1.5rem !default;
$card-border-width:        10px !default;
$card-border-color:        $blue !default;

$card-cap-bg:              transparent !default;
$card-img-overlay-padding: 3rem !default;


// Navbar

$navbar-light-color:                $blue !default;
$navbar-light-hover-color:          $blue !default;
$navbar-light-active-color:         $blue !default;
$navbar-light-disabled-color:       rgba($black,.3) !default;
$navbar-light-toggler-bg: str-replace(url("data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke='#{$navbar-light-color}' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3E%3C/svg%3E"), "#", "%23") !default;
$navbar-light-toggler-border:       $blue !default;

// Buttons
$btn-padding-x:                  1.5rem !default;
$btn-padding-y:                  1.5rem !default;

$btn-box-shadow:                 8px 8px 0 0  $blue !default;
$btn-focus-box-shadow:           0 0 8px 8px  $blue !default;
$btn-active-box-shadow:          0 0 8px 8px  $blue !default;

$btn-primary-color:              $brand-primary !default;
$btn-primary-bg:                 $white !default;
$btn-primary-border:             $btn-primary-color !default;


//
// Custom styles
//

// Positioning

.header {
  position: relative;
  top: 4rem;
}

// Fonts

.display-1 {
  line-height: 1.39;
  margin-top: -5.5rem;
}

.display-2 {
  color: $black;
}

.lead {
  font-family: $headings-font-family;
  line-height: 1.2;
  margin-bottom: 1.5rem;
}

.small {
  color: $gray-dark;
}

// Navigation

.btn,
.nav-link {
  font-family: $headings-font-family;
}

.flex-column .nav-link {
  font-size: 1.5rem;
  color: $black;
}

.icon-arrow {
  background: url('../images/pil.png') no-repeat 0 50%;
}

.icon-arrow-blue {
  background: url('../images/pil-bla.png') no-repeat 0 50%;
}

.nav-menu-main {
  font-size: 1.875rem;
}

.nav-menu-secondary {
  font-size: 1.125rem;
  line-height: 1;

  li:first-child a {
    border-right: 1px solid $blue;
  }
}
